{"version":3,"sources":["components/Header.js","components/Intro.js","components/Upload.js","components/Output.js","components/History.js","components/Submit.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Intro","href","target","rel","columnProps","tokens","childrenGap","styles","root","width","iconProps","iconName","Upload","props","React","nickname","setNickname","undefined","file","setFile","filePath","setFilePath","errorMessage","setErrorMessage","Stack","TextField","name","value","onChange","event","label","placeholder","required","Label","htmlFor","type","accept","id","files","PrimaryButton","text","onClick","updateUpload","stackTokens","maxWidth","Output","horizontal","verticalAlign","timestamp","wordCount","isParsing","Spinner","parsedPDF","theme","getTheme","palette","semanticColors","fonts","classNames","mergeStyleSets","container","overflow","maxHeight","itemCell","getFocusStyle","inset","minHeight","padding","boxSizing","borderBottom","bodyDivider","display","selectors","background","neutralLight","itemContent","marginLeft","flexGrow","itemName","xLarge","whiteSpace","textOverflow","itemIndex","fontSize","small","color","neutralTertiary","marginBottom","History","items","JSON","parse","history","FocusZone","direction","FocusZoneDirection","vertical","data-is-scrollable","List","onRenderCell","item","index","data-is-focusable","fileName","dropdownStyles","dropdown","iconButtonStyles","promptOptions","key","prompts","wrapper","height","position","pane","border","sticky","neutralDark","borderTop","black","textContent","scrollablePaneStyles","colors","Array","from","length","map","Submit","dropdownRef","isOpen","setIsOpen","openPanel","useConstCallback","dismissPanel","CustomLabel","IconButton","title","ariaLabel","contentAreas","style","backgroundColor","Sticky","stickyPosition","StickyPositionType","Both","description","Dropdown","componentRef","options","onRenderLabel","defaultSelectedKey","Panel","isLightDismiss","onDismiss","closeButtonAriaLabel","headerText","ScrollablePane","initializeIcons","App","state","localStorage","getItem","bind","this","setState","moment","format","then","splitArr","split","parsedHistory","push","historyString","stringify","setItem","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2c98ab86.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1 className=\"ms-fontSize-42\">Common (Word-Counting) App</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nfunction Intro() {\r\n    return (\r\n        <div className=\"ms-depth-64 intro\">\r\n            <h2 className=\"ms-fontSize-20\">Inspired by <a href=\"https://appsupport.commonapp.org/applicantsupport/s/article/What-is-the-min-max-word-count-for-the-essays-on-the-Questions-page-or-Writing-Supplement\" target=\"_blank\" rel=\"noopener noreferral\">the most FAQ</a> in the Writing section of the Common App's <a href=\"https://appsupport.commonapp.org/applicantsupport/s/\" target=\"_blank\" rel=\"noopener noreferral\">Student solutions center</a>, the \"Common Word-Counting App\" is your handy-dandy online tool for checking the word count of your college admissions essays.</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Intro;\r\n","import * as React from 'react';\r\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport { Label } from 'office-ui-fabric-react/lib/Label';\r\nimport { PrimaryButton } from 'office-ui-fabric-react';\r\n\r\nconst columnProps = {\r\n    tokens: { childrenGap: 10 },\r\n    styles: { root: { width: \"100%\" } },\r\n};\r\n\r\nconst iconProps = { iconName: 'PDF' };\r\n\r\nfunction Upload(props) {\r\n    const [nickname, setNickname] = React.useState(\"\");\r\n    const [file, setFile] = React.useState(undefined);\r\n    const [filePath, setFilePath] = React.useState(\"\");\r\n    const [errorMessage, setErrorMessage] = React.useState(\"\");\r\n\r\n    const handleInputChange = (event) => {\r\n        setNickname(event.target.value);\r\n    };\r\n\r\n    const handleFileSelect = (event) => {\r\n        setFile(event.target.files[0]);\r\n        setFilePath(event.target.value);\r\n    }\r\n\r\n    function uploadPDF() {\r\n        if (nickname && file) {\r\n            if (errorMessage) {\r\n                setErrorMessage(\"\");\r\n            }\r\n            props.updateUpload(file, filePath, nickname);\r\n        } else if (!nickname) {\r\n            setErrorMessage(\"Please nickname your essay.\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"ms-depth-64 tile\">\r\n            <h5>Upload your essay</h5>\r\n            <form>\r\n                <Stack {...columnProps}>\r\n                    <TextField \r\n                        name=\"nickname\"\r\n                        value={nickname}\r\n                        onChange={handleInputChange}\r\n                        label=\"Essay nickname\"\r\n                        placeholder=\"e.g. Liberal arts college essay version 1.0\"\r\n                        iconProps={iconProps}\r\n                        required\r\n                        errorMessage={errorMessage}\r\n                    />\r\n                    <Label htmlFor=\"upload\" required>Upload your essay as .PDF file:</Label>\r\n                    <input type=\"file\" accept=\".pdf\" id=\"upload\" name=\"upload\" onChange={handleFileSelect} />\r\n                </Stack>\r\n                <br />\r\n                <PrimaryButton text=\"Upload .PDF\" onClick={uploadPDF} />\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Upload;\r\n","import * as React from 'react';\r\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\r\nimport { Label } from 'office-ui-fabric-react/lib/Label';\r\nimport { Spinner } from 'office-ui-fabric-react/lib/Spinner';\r\n \r\nconst stackTokens = {\r\n  childrenGap: 4,\r\n  maxWidth: \"100%\",\r\n};\r\n\r\nfunction Output(props) {\r\n  return (\r\n    <div className=\"ms-depth-64 tile\">\r\n      <h5>Essay word count</h5>\r\n      <div>\r\n        <Stack horizontal verticalAlign=\"center\" tokens={stackTokens}>\r\n          <Label>Essay name:</Label>\r\n          <span>{props.nickname}</span>\r\n        </Stack>\r\n        <Stack horizontal verticalAlign=\"center\" tokens={stackTokens}>\r\n          <Label>File name:</Label>\r\n          <span>{props.file.name}</span>\r\n        </Stack>\r\n        <Stack horizontal verticalAlign=\"center\" tokens={stackTokens}>\r\n          <Label>Upload time:</Label>\r\n          <span>{props.timestamp}</span>\r\n        </Stack>\r\n        <Stack horizontal verticalAlign=\"center\" tokens={stackTokens}>\r\n          <Label>Word count:</Label>\r\n          <span>{props.wordCount}</span>\r\n        </Stack>\r\n        <Stack horizontal verticalAlign=\"center\" tokens={stackTokens}>\r\n          <Label>Text from .PDF:</Label>\r\n          <span>\r\n            {props.isParsing ? <Spinner label=\"Parsing...\" /> : \"\"}\r\n          </span>\r\n        </Stack>\r\n        {props.parsedPDF === \"\" ? \"\" : <div className=\"parsed\">{props.parsedPDF}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Output;\r\n","import * as React from 'react';\r\nimport { FocusZone, FocusZoneDirection } from 'office-ui-fabric-react/lib/FocusZone';\r\nimport { List } from 'office-ui-fabric-react/lib/List';\r\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\r\nimport { Label } from 'office-ui-fabric-react/lib/Label';\r\nimport { mergeStyleSets, getTheme, getFocusStyle } from 'office-ui-fabric-react/lib/Styling';\r\n\r\nconst theme = getTheme();\r\nconst { palette, semanticColors, fonts } = theme;\r\nconst classNames = mergeStyleSets({\r\n  container: {\r\n    overflow: 'auto',\r\n    maxHeight: \"50%\",\r\n  },\r\n  itemCell: [\r\n    getFocusStyle(theme, { inset: -1 }),\r\n    {\r\n      minHeight: 54,\r\n      padding: 10,\r\n      boxSizing: 'border-box',\r\n      borderBottom: `1px solid ${semanticColors.bodyDivider}`,\r\n      display: 'flex',\r\n      selectors: {\r\n        '&:hover': { background: palette.neutralLight },\r\n      },\r\n    },\r\n  ],\r\n  itemContent: {\r\n    marginLeft: 10,\r\n    overflow: 'hidden',\r\n    flexGrow: 1,\r\n  },\r\n  itemName: [\r\n    fonts.xLarge,\r\n    {\r\n      whiteSpace: 'nowrap',\r\n      overflow: 'hidden',\r\n      textOverflow: 'ellipsis',\r\n    },\r\n  ],\r\n  itemIndex: {\r\n    fontSize: fonts.small.fontSize,\r\n    color: palette.neutralTertiary,\r\n    marginBottom: 10,\r\n  }\r\n});\r\n\r\nconst stackTokens = {\r\n  childrenGap: 4,\r\n  maxWidth: \"100%\",\r\n};\r\n\r\nfunction History(props) {\r\n  const items = JSON.parse(props.history);\r\n\r\n  const onRenderCell = (item, index) => {\r\n    return (\r\n      <div className={classNames.itemCell} data-is-focusable={true}>\r\n        <div className={classNames.itemContent}>\r\n          <div className={classNames.itemIndex}>\r\n            {`Upload ${index + 1}: ${item.timestamp}`}\r\n          </div>\r\n          <div className={classNames.itemName}>{item.nickname}</div>\r\n          <Stack horizontal verticalAlign=\"center\" tokens={stackTokens}>\r\n            <Label>File name:</Label>\r\n            <span>{item.fileName}</span>\r\n          </Stack>\r\n          <Stack horizontal verticalAlign=\"center\" tokens={stackTokens}>\r\n            <Label>Word count:</Label>\r\n            <span>{item.wordCount}</span>\r\n          </Stack>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  return (\r\n    <div className=\"ms-depth-64 tile\">\r\n      <h5>Your essay uploads</h5>\r\n      {(items === null) ? <p>No uploads yet</p> :\r\n      <FocusZone direction={FocusZoneDirection.vertical}>\r\n        <div className={classNames.container} data-is-scrollable>\r\n          <List items={items} onRenderCell={onRenderCell} />\r\n        </div>\r\n      </FocusZone>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","import * as React from 'react';\r\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport { Dropdown } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { Label } from 'office-ui-fabric-react/lib/Label';\r\nimport { PrimaryButton, IconButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { Panel } from 'office-ui-fabric-react/lib/Panel';\r\nimport { ScrollablePane } from 'office-ui-fabric-react/lib/ScrollablePane';\r\nimport { Sticky, StickyPositionType } from 'office-ui-fabric-react/lib/Sticky';\r\nimport { useConstCallback } from '@uifabric/react-hooks';\r\nimport { getTheme, mergeStyleSets } from 'office-ui-fabric-react/lib/Styling';\r\n\r\nconst columnProps = {\r\n  tokens: { childrenGap: 15 },\r\n  styles: { root: { width: \"100%\" } },\r\n};\r\n\r\nconst dropdownStyles = { dropdown: { width: \"100%\" } };\r\n\r\nconst stackTokens = {\r\n    childrenGap: 4,\r\n    maxWidth: 300,\r\n};\r\n\r\nconst iconProps = { iconName: 'Info' };\r\nconst iconButtonStyles = { root: { marginBottom: -3 } };\r\n\r\nconst promptOptions = [\r\n    { key: '1', text: 'Prompt 1' },\r\n    { key: '2', text: 'Prompt 2' },\r\n    { key: '3', text: 'Prompt 3' },\r\n    { key: '4', text: 'Prompt 4' },\r\n    { key: '5', text: 'Prompt 5' },\r\n    { key: '6', text: 'Prompt 6' },\r\n    { key: '7', text: 'Prompt 7' }\r\n];\r\n\r\nconst prompts = [\r\n    \"Some students have a background, identity, interest, or talent so meaningful they believe their application would be incomplete without it. If this sounds like you, please share your story.\",\r\n    \"The lessons we take from obstacles we encounter can be fundamental to later success. Recount a time when you faced a challenge, setback, or failure. How did it affect you, and what did you learn from the experience?\",\r\n    \"Reflect on a time when you questioned or challenged a belief or idea. What prompted your thinking? What was the outcome?\",\r\n    \"Describe a problem you’ve solved or a problem you’d like to solve. It can be an intellectual challenge, a research query, an ethical dilemma — anything of personal importance, no matter the scale. Explain its significance to you and what steps you took or could be taken to identify a solution.\",\r\n    \"Discuss an accomplishment, event, or realization that sparked a period of personal growth and a new understanding of yourself or others.\",\r\n    \"Describe a topic, idea, or concept you find so engaging it makes you lose all track of time. Why does it captivate you? What or who do you turn to when you want to learn more?\",\r\n    \"Share an essay on any topic of your choice. It can be one you’ve already written, one that responds to a different prompt, or one of your own design.\"\r\n];\r\n\r\nconst theme = getTheme();\r\nconst classNames = mergeStyleSets({\r\n  wrapper: {\r\n    height: '80vh',\r\n    position: 'relative',\r\n    maxHeight: 'inherit',\r\n  },\r\n  pane: {\r\n    maxWidth: \"99%\",\r\n    border: '1px solid ' + theme.palette.neutralLight,\r\n  },\r\n  sticky: {\r\n    color: theme.palette.neutralDark,\r\n    padding: '5px 20px 5px 10px',\r\n    fontSize: '13px',\r\n    borderTop: '1px solid ' + theme.palette.black,\r\n    borderBottom: '1px solid ' + theme.palette.black,\r\n  },\r\n  textContent: {\r\n    padding: '15px 10px',\r\n  },\r\n});\r\nconst scrollablePaneStyles = { root: classNames.pane };\r\nconst colors = ['#eff6fc', '#deecf9', '#eaeaea', '#dadada', '#c8c8c8', '#c7e0f4', '#71afe5'];\r\nconst items = Array.from({ length: 7 }).map(index => ({\r\n    color: colors[index],\r\n    text: prompts[index],\r\n    index\r\n}));\r\n\r\nfunction Submit() {\r\n    const dropdownRef = React.createRef();\r\n    const [isOpen, setIsOpen] = React.useState(false);\r\n    const openPanel = useConstCallback(() => setIsOpen(true));\r\n    const dismissPanel = useConstCallback(() => setIsOpen(false));\r\n\r\n    const CustomLabel = (props) => {\r\n        return (\r\n            <Stack horizontal verticalAlign=\"center\" tokens={stackTokens}>\r\n                <Label id={props.id}>{props.label}</Label>\r\n                <IconButton\r\n                    id=\"iconButton\"\r\n                    iconProps={iconProps}\r\n                    title=\"Info\"\r\n                    ariaLabel=\"Info\"\r\n                    onClick={props.openPanel}\r\n                    styles={iconButtonStyles}\r\n                />\r\n            </Stack>\r\n        );\r\n    };\r\n\r\n    const onRenderLabel = (props) => <CustomLabel id=\"prompt\" openPanel={openPanel} {...props} />\r\n\r\n    const createContentArea = (item) => (\r\n        <div\r\n            key={item.index}\r\n            style={{\r\n                backgroundColor: item.color,\r\n            }}\r\n        >\r\n            <Sticky stickyPosition={StickyPositionType.Both}>\r\n                <div className={classNames.sticky}>Prompt {item.index + 1}</div>\r\n            </Sticky>\r\n            <div className={classNames.textContent}>{item.text}</div>\r\n        </div>\r\n      );\r\n\r\n    const contentAreas = items.map(createContentArea);\r\n      \r\n    function submitEssay() {\r\n        //@TODO\r\n    }\r\n\r\n    return (\r\n        <div className=\"ms-depth-64 tile\">\r\n            <h5><span className=\"todo\">@TODO</span> Submit your essay</h5>\r\n            <Stack {...columnProps}>\r\n                <TextField label=\"Name\" required />\r\n                <TextField label=\"Email address\" description=\"Use the email address associated with your Common App account\" required />\r\n                <Dropdown\r\n                    componentRef={dropdownRef}\r\n                    placeholder=\"Select an institution\"\r\n                    label=\"Institution to which you are applying\"\r\n                    options={[\r\n                        { key: 'UT', text: 'The University of Texas at Austin' },\r\n                        { key: 'A&M', text: 'Texas A&M University' }\r\n                    ]}\r\n                    required\r\n                    styles={dropdownStyles}\r\n                />\r\n                <TextField label=\"Program of study\" description=\"Note that your choice of program may impact your admissions essay requirements\" />\r\n                <Dropdown\r\n                    componentRef={dropdownRef}\r\n                    placeholder=\"Select an option\"\r\n                    label=\"Your chosen prompt\"\r\n                    onRenderLabel={onRenderLabel}\r\n                    defaultSelectedKey=\"1\"\r\n                    options={promptOptions}\r\n                    required\r\n                    styles={dropdownStyles}\r\n                />\r\n                <Label htmlFor=\"upload\">Upload your essay as .PDF file:</Label>\r\n                <input type=\"file\" accept=\".pdf\" id=\"upload\" name=\"upload\" />\r\n            </Stack>\r\n            <br />\r\n            <PrimaryButton text=\"Submit Essay\" onClick={submitEssay} />\r\n            <Panel\r\n                isLightDismiss\r\n                isOpen={isOpen}\r\n                onDismiss={dismissPanel}\r\n                closeButtonAriaLabel=\"Close\"\r\n                headerText=\"First-year essay prompts\"\r\n            >\r\n                <p>Common App has announced that the <a href=\"https://www.commonapp.org/apply/essay-prompts\" target=\"_blank\" rel=\"noopener noreferral\">2020-2021 essay prompts</a> will remain the same as the 2019–2020 essay prompts.</p>\r\n                <div className={classNames.wrapper}>\r\n                    <ScrollablePane styles={scrollablePaneStyles}>{contentAreas}</ScrollablePane>\r\n                </div>\r\n            </Panel>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Submit;\r\n","import React, { Component } from 'react';\nimport Header from \"./components/Header\";\nimport Intro from \"./components/Intro\";\nimport Upload from \"./components/Upload\";\nimport Output from \"./components/Output\";\nimport History from \"./components/History\";\nimport Submit from \"./components/Submit\";\nimport { initializeIcons } from '@uifabric/icons';\nimport 'office-ui-fabric-react/dist/css/fabric.css';\nimport \"./assets/css/style.css\"\nimport moment from \"moment\";\n// import parse from \"./utils/parse\";\n\ninitializeIcons();\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      file: {},\n      nickname: \"\",\n      timestamp: \"\",\n      isParsing: false,\n      parsedPDF: \"\",\n      wordCount: null,\n      history: localStorage.getItem(\"uploads\")\n    };\n    this.updateUpload = this.updateUpload.bind(this);\n  }\n\n  updateUpload(file, filePath, nickname) {\n    this.setState({\n      file: file,\n      nickname: nickname,\n      timestamp: moment().format(\"dddd, M/DD/YY, h:mm a\"),\n      isParsing: true\n    });\n\n    // const text = parse(filePath);\n\n    file.text().then(text => {\n      const splitArr = text.split(/\\s+/);\n      this.setState({\n        wordCount: splitArr.length,\n        parsedPDF: text,\n        isParsing: false\n      });\n      const parsedHistory = this.state.history === null ? [] :\n        JSON.parse(this.state.history);\n      parsedHistory.push({\n        nickname: nickname,\n        fileName: file.name,\n        timestamp: moment().format(\"dddd, M/DD/YY, h:mm a\"),\n        wordCount: splitArr.length\n      });\n      const historyString = JSON.stringify(parsedHistory);\n      this.setState({ history: historyString});\n      localStorage.setItem(\"uploads\", historyString);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <Intro />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 col-md-6\">\n              <Upload updateUpload={this.updateUpload} />\n            </div>\n            <div className=\"col-12 col-md-6\">\n              <Output\n                file={this.state.file}\n                nickname={this.state.nickname}\n                timestamp={this.state.timestamp}\n                isParsing={this.state.isParsing}\n                parsedPDF={this.state.parsedPDF}\n                wordCount={this.state.wordCount}\n              />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 col-md-6\">\n              <History history={this.state.history} />\n            </div>\n            <div className=\"col-12 col-md-6\">\n              <Submit />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}